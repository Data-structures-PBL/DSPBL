<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>